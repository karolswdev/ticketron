# .github/workflows/ci.yml
name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    # Set default working directory for subsequent run steps
    # because go.mod is in the ticketron subdirectory.
    defaults:
      run:
        working-directory: ./ticketron
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22' # Use a recent Go version

    - name: Build
      # Runs 'go build ./...' in the ./ticketron directory due to defaults
      run: go build ./...

    - name: Test
      # Runs 'go test ./...' in the ./ticketron directory due to defaults
      run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Run Integration Tests
      # Runs integration tests tagged with 'integration'
      # Excludes coverage reporting for integration tests for simplicity
      run: go test -tags=integration -v ./... # Add -v for verbose output

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      # No token needed here if CODECOV_TOKEN secret is set in GitHub repo settings


    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
        version: latest
        # Optional: working directory, useful for monorepos
        # working-directory: somedir # Not needed due to job defaults
        # Optional: golangci-lint command line arguments.
        # args: --issues-exit-code=0 # Initially allow issues
        # Optional: show only new issues if it's a pull request. The default value is `false`.
        # only-new-issues: true

    - name: Run govulncheck
      # Runs 'govulncheck ./...' in the ./ticketron directory due to defaults
      run: govulncheck ./...